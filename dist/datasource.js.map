{"version":3,"sources":["../src/datasource.js"],"names":["_","moment","SunCalc","SunAndMoonDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","jsonData","latitude","position","longitude","_p","metrics","moon_illumination","text","calc","time","getMoonIllumination","fraction","values","moon_altitude","cachedMoonPosition","altitude","Math","PI","moon_azimuth","azimuth","moon_distance","distance","sun_altitude","cachedSunPosition","sun_azimuth","annotations","sunrise","title","tags","sunriseEnd","goldenHourEnd","solarNoon","goldenHour","sunsetStart","sunset","dusk","nauticalDusk","night","nadir","nightEnd","nauticalDawn","dawn","moonrise","moonset","moonPosition","getMoonPosition","sunPosition","getPosition","options","from","range","valueOf","to","maxDataPoints","stepInSeconds","targets","map","i","target","series","pick","idx","ceil","metric","cleanCachedPositions","targetSeries","push","add","annotation","query","undefined","split","result","date","sunTimes","getTimes","moonTimes","getMoonTimes","merge","mapKeys","value","key","indexOf","when","res","message"],"mappings":"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","sourcesContent":["import _ from \"./lodash\";\nimport moment from 'moment';\nimport SunCalc from \"./suncalc\";\n\nexport class SunAndMoonDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n\n    // Datasource configuration. Flatten jsonData.position.* originating from older settings.\n    if ('position' in instanceSettings.jsonData) {\n      instanceSettings.jsonData.latitude = instanceSettings.jsonData.position.latitude;\n      instanceSettings.jsonData.longitude = instanceSettings.jsonData.position.longitude;\n      delete instanceSettings.jsonData.position;\n    }\n    this.position = instanceSettings.jsonData;\n\n    // Configure available metrics\n    var _p = this;\n    this.metrics = {\n      moon_illumination: {\n        text: \"Moon illumination\",\n        calc: function(time) {\n                return SunCalc.getMoonIllumination(time).fraction;\n              },\n        values: []\n      },\n      moon_altitude: {\n        text: \"Moon altitude\",\n        calc: function(time) {\n          return _p.cachedMoonPosition(time).altitude * 180 / Math.PI;\n        },\n        values: []\n      },\n      moon_azimuth: {\n        text: \"Moon azimuth\",\n        calc: function(time) {\n          return _p.cachedMoonPosition(time).azimuth * 180 / Math.PI;\n        },\n        values: []\n      },\n      moon_distance: {\n        text: \"Moon distance\",\n        calc: function(time) { return _p.cachedMoonPosition(time).distance; },\n        values: []\n      },\n      sun_altitude: {\n        text: \"Sun altitude\",\n        calc: function(time) {\n          return _p.cachedSunPosition(time).altitude * 180 / Math.PI;\n        },\n        values: []\n      },\n      sun_azimuth: {\n        text: \"Sun azimuth\",\n        calc: function(time) {\n          return _p.cachedSunPosition(time).azimuth * 180 / Math.PI;\n        },\n        values: []\n      }\n    };\n\n    // Configure annotations\n    this.annotations = {\n      sunrise: {\n        title: \"Sunrise\",\n        text:  \"Top edge of the sun appears on the horizon\",\n        tags:  \"sun\"\n      },\n      sunriseEnd: {\n        title: \"Sunrise ends\",\n        text:  \"Bottom edge of the sun touches the horizon\",\n        tags:  \"sun\"\n      },\n      goldenHourEnd: {\n        title: \"Morning golden hour ends\",\n        text:  \"Soft light, best time for photography\",\n        tags:  \"sun\"\n      },\n      solarNoon: {\n        title: \"Solar noon\",\n        text:  \"Sun is in the highest position\",\n        tags:  \"sun\"\n      },\n      goldenHour: {\n        title: \"Evening golden hour starts\",\n        text:  \"Soft light, best time for photography\",\n        tags:  \"sun\"\n      },\n      sunsetStart: {\n        title: \"Sunset starts\",\n        text:  \"Bottom edge of the sun touches the horizon\",\n        tags:  \"sun\"\n      },\n      sunset: {\n        title: \"Sunset\",\n        text:  \"Sun disappears below the horizon, \" +\n               \"evening civil twilight starts\",\n        tags:  \"sun\"\n      },\n      dusk: {\n        title: \"Dusk\",\n        text:  \"Evening nautical twilight starts\",\n        tags:  \"sun\"\n      },\n      nauticalDusk: {\n        title: \"Nautical dusk\",\n        text:  \"Evening astronomical twilight starts\",\n        tags:  \"sun\"\n      },\n      night: {\n        title: \"Night starts\",\n        text:  \"Dark enough for astronomical observations\",\n        tags:  \"sun\"\n      },\n      nadir: {\n        title: \"Nadir\",\n        text:  \"Darkest moment of the night, sun is in the lowest position\",\n        tags:  \"sun\"\n      },\n      nightEnd: {\n        title: \"Night ends\",\n        text:  \"Morning astronomical twilight starts\",\n        tags:  \"sun\"\n      },\n      nauticalDawn: {\n        title: \"Nautical dawn\",\n        text:  \"Morning nautical twilight starts\",\n        tags:  \"sun\"\n      },\n      dawn: {\n        title: \"Dawn\",\n        text:  \"Morning nautical twilight ends, morning civil twilight starts\",\n        tags:  \"sun\"\n      },\n      moonrise: {\n        title: \"Moonrise\",\n        text:  \"Top edge of the moon appears on the horizon\",\n        tags:  \"moon\"\n      },\n      moonset: {\n        title: \"Moonset\",\n        text:  \"Moon disappears below the horizon\",\n        tags:  \"moon\"\n      }\n    };\n  }\n\n  // Cache values\n  cachedMoonPosition(time) {\n    if (!this.moonPosition)\n      this.moonPosition = SunCalc.getMoonPosition(\n          time, this.position.latitude, this.position.longitude);\n    return this.moonPosition;\n  }\n  cachedSunPosition(time) {\n    if (!this.sunPosition)\n      this.sunPosition = SunCalc.getPosition(\n          time, this.position.latitude, this.position.longitude);\n    return this.sunPosition;\n  }\n  cleanCachedPositions() {\n    this.moonPosition = null;\n    this.sunPosition = null;\n  }\n\n  query(options) {\n    var from = options.range.from.valueOf();\n    var to = options.range.to.valueOf();\n    var maxDataPoints = options.maxDataPoints;\n    var stepInSeconds = (to - from) / maxDataPoints;\n\n    var targets = _.map(options.targets, function(i) { return i.target; });\n\n    // Result map\n    var series = _.pick(this.metrics, targets);\n    for (let idx = 0, time = from; time < to;\n         idx += 1, time += Math.ceil(stepInSeconds)) {\n      for (let metric in series) {\n        series[metric].values[idx] = [series[metric].calc(time), time];\n      }\n      this.cleanCachedPositions();\n    }\n\n    var targetSeries = [];\n    for (let metric in series) {\n      targetSeries.push({\"target\": series[metric].text,\n                         \"datapoints\": series[metric].values});\n    }\n    return {\"data\": targetSeries};\n  }\n\n  annotationQuery(options) {\n    var from = moment(options.range.from);\n    var to = moment(options.range.to).add(1, \"days\");\n    var targets = \"*\";\n    if (options.annotation.query !== undefined)\n      targets = options.annotation.query.split(/\\s*[\\s,]\\s*/);\n\n    var result = [];\n    for (let date = from; date < to; date.add(1, \"days\")) {\n      var sunTimes = SunCalc.getTimes(\n          date, this.position.latitude, this.position.longitude);\n      var moonTimes = SunCalc.getMoonTimes(\n          date, this.position.latitude, this.position.longitude);\n      var values = _.merge({}, sunTimes,\n          _.mapKeys(moonTimes, function(value, key) { return \"moon\" + key; }));\n      for (let value in values) {\n        if (targets != \"*\" && targets.indexOf(value) < 0)\n          continue;\n        result.push({\n          \"annotation\": options.annotation,\n          \"title\": this.annotations[value].title,\n          \"text\": this.annotations[value].text,\n          \"time\": values[value].valueOf(),\n          \"tags\": this.annotations[value].tags,\n        });\n      }\n    }\n    return this.q.when(result);\n  }\n\n  testDatasource() {\n    var res = {};\n    if (this.position.latitude < -90 || this.position.latitude > 90) {\n      res = {\"status\": \"error\", title: \"Error\",\n             message: \"Latitude not in range -+90.\"};\n    } else if (this.position.longitude < -360 ||\n               this.position.longitude > 360) {\n      res = {\"status\": \"error\", title: \"Error\",\n             message: \"Longitude not in range -+360.\"};\n    } else {\n      res = {\"status\": \"success\", title: \"Success\",\n             message: \"Datasource added successfully.\"};\n    }\n    return this.q.when(res);\n  }\n\n  metricFindQuery() {\n    return this.q.when(_.map(this.metrics, (value, key) => {\n      return {text: value.text, value: key};\n    }));\n  }\n}\n"],"file":"datasource.js"}